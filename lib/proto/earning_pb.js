/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.pending_props_pb.Earning', null, global);
goog.exportSymbol('proto.pending_props_pb.EarningDetails', null, global);
goog.exportSymbol('proto.pending_props_pb.Status', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pending_props_pb.Earning = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pending_props_pb.Earning, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pending_props_pb.Earning.displayName = 'proto.pending_props_pb.Earning';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pending_props_pb.Earning.prototype.toObject = function(opt_includeInstance) {
  return proto.pending_props_pb.Earning.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pending_props_pb.Earning} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pending_props_pb.Earning.toObject = function(includeInstance, msg) {
  var f, obj = {
    details: (f = msg.getDetails()) && proto.pending_props_pb.EarningDetails.toObject(includeInstance, f),
    signature: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pending_props_pb.Earning}
 */
proto.pending_props_pb.Earning.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pending_props_pb.Earning;
  return proto.pending_props_pb.Earning.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pending_props_pb.Earning} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pending_props_pb.Earning}
 */
proto.pending_props_pb.Earning.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pending_props_pb.EarningDetails;
      reader.readMessage(value,proto.pending_props_pb.EarningDetails.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pending_props_pb.Earning.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pending_props_pb.Earning.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pending_props_pb.Earning} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pending_props_pb.Earning.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pending_props_pb.EarningDetails.serializeBinaryToWriter
    );
  }
  f = message.getSignature();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional EarningDetails details = 1;
 * @return {?proto.pending_props_pb.EarningDetails}
 */
proto.pending_props_pb.Earning.prototype.getDetails = function() {
  return /** @type{?proto.pending_props_pb.EarningDetails} */ (
    jspb.Message.getWrapperField(this, proto.pending_props_pb.EarningDetails, 1));
};


/** @param {?proto.pending_props_pb.EarningDetails|undefined} value */
proto.pending_props_pb.Earning.prototype.setDetails = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.pending_props_pb.Earning.prototype.clearDetails = function() {
  this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.pending_props_pb.Earning.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string signature = 2;
 * @return {string}
 */
proto.pending_props_pb.Earning.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.pending_props_pb.Earning.prototype.setSignature = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pending_props_pb.EarningDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pending_props_pb.EarningDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.pending_props_pb.EarningDetails.displayName = 'proto.pending_props_pb.EarningDetails';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pending_props_pb.EarningDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.pending_props_pb.EarningDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pending_props_pb.EarningDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pending_props_pb.EarningDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    amountEarned: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    amountSettled: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    recipientPublicAddress: jspb.Message.getFieldWithDefault(msg, 4, ""),
    applicationPublicAddress: jspb.Message.getFieldWithDefault(msg, 5, ""),
    status: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pending_props_pb.EarningDetails}
 */
proto.pending_props_pb.EarningDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pending_props_pb.EarningDetails;
  return proto.pending_props_pb.EarningDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pending_props_pb.EarningDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pending_props_pb.EarningDetails}
 */
proto.pending_props_pb.EarningDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAmountEarned(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAmountSettled(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientPublicAddress(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationPublicAddress(value);
      break;
    case 6:
      var value = /** @type {!proto.pending_props_pb.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pending_props_pb.EarningDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pending_props_pb.EarningDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pending_props_pb.EarningDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pending_props_pb.EarningDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getAmountEarned();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getAmountSettled();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getRecipientPublicAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getApplicationPublicAddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional int64 timestamp = 1;
 * @return {number}
 */
proto.pending_props_pb.EarningDetails.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.pending_props_pb.EarningDetails.prototype.setTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional float amount_earned = 2;
 * @return {number}
 */
proto.pending_props_pb.EarningDetails.prototype.getAmountEarned = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.pending_props_pb.EarningDetails.prototype.setAmountEarned = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float amount_settled = 3;
 * @return {number}
 */
proto.pending_props_pb.EarningDetails.prototype.getAmountSettled = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.pending_props_pb.EarningDetails.prototype.setAmountSettled = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional string recipient_public_address = 4;
 * @return {string}
 */
proto.pending_props_pb.EarningDetails.prototype.getRecipientPublicAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.pending_props_pb.EarningDetails.prototype.setRecipientPublicAddress = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string application_public_address = 5;
 * @return {string}
 */
proto.pending_props_pb.EarningDetails.prototype.getApplicationPublicAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.pending_props_pb.EarningDetails.prototype.setApplicationPublicAddress = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Status status = 6;
 * @return {!proto.pending_props_pb.Status}
 */
proto.pending_props_pb.EarningDetails.prototype.getStatus = function() {
  return /** @type {!proto.pending_props_pb.Status} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.pending_props_pb.Status} value */
proto.pending_props_pb.EarningDetails.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * @enum {number}
 */
proto.pending_props_pb.Status = {
  PENDING: 0,
  REVOKED: 1,
  SETTLED: 2,
  REASSIGNED: 3,
  ERROR: 4
};

goog.object.extend(exports, proto.pending_props_pb);
