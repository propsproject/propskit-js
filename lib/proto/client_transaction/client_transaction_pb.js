/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var transaction_pb = require('./transaction_pb.js');
var client_list_control_pb = require('./client_list_control_pb.js');
goog.exportSymbol('proto.ClientTransactionGetRequest', null, global);
goog.exportSymbol('proto.ClientTransactionGetResponse', null, global);
goog.exportSymbol('proto.ClientTransactionGetResponse.Status', null, global);
goog.exportSymbol('proto.ClientTransactionListRequest', null, global);
goog.exportSymbol('proto.ClientTransactionListResponse', null, global);
goog.exportSymbol('proto.ClientTransactionListResponse.Status', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ClientTransactionListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ClientTransactionListRequest.repeatedFields_, null);
};
goog.inherits(proto.ClientTransactionListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ClientTransactionListRequest.displayName = 'proto.ClientTransactionListRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ClientTransactionListRequest.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ClientTransactionListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ClientTransactionListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ClientTransactionListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClientTransactionListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    headId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    transactionIdsList: jspb.Message.getRepeatedField(msg, 2),
    paging: (f = msg.getPaging()) && client_list_control_pb.ClientPagingControls.toObject(includeInstance, f),
    sortingList: jspb.Message.toObjectList(msg.getSortingList(),
    client_list_control_pb.ClientSortControls.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ClientTransactionListRequest}
 */
proto.ClientTransactionListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ClientTransactionListRequest;
  return proto.ClientTransactionListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ClientTransactionListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ClientTransactionListRequest}
 */
proto.ClientTransactionListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeadId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTransactionIds(value);
      break;
    case 3:
      var value = new client_list_control_pb.ClientPagingControls;
      reader.readMessage(value,client_list_control_pb.ClientPagingControls.deserializeBinaryFromReader);
      msg.setPaging(value);
      break;
    case 4:
      var value = new client_list_control_pb.ClientSortControls;
      reader.readMessage(value,client_list_control_pb.ClientSortControls.deserializeBinaryFromReader);
      msg.addSorting(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ClientTransactionListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ClientTransactionListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ClientTransactionListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClientTransactionListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeadId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTransactionIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getPaging();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      client_list_control_pb.ClientPagingControls.serializeBinaryToWriter
    );
  }
  f = message.getSortingList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      client_list_control_pb.ClientSortControls.serializeBinaryToWriter
    );
  }
};


/**
 * optional string head_id = 1;
 * @return {string}
 */
proto.ClientTransactionListRequest.prototype.getHeadId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ClientTransactionListRequest.prototype.setHeadId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string transaction_ids = 2;
 * @return {!Array<string>}
 */
proto.ClientTransactionListRequest.prototype.getTransactionIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.ClientTransactionListRequest.prototype.setTransactionIdsList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.ClientTransactionListRequest.prototype.addTransactionIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.ClientTransactionListRequest.prototype.clearTransactionIdsList = function() {
  this.setTransactionIdsList([]);
};


/**
 * optional ClientPagingControls paging = 3;
 * @return {?proto.ClientPagingControls}
 */
proto.ClientTransactionListRequest.prototype.getPaging = function() {
  return /** @type{?proto.ClientPagingControls} */ (
    jspb.Message.getWrapperField(this, client_list_control_pb.ClientPagingControls, 3));
};


/** @param {?proto.ClientPagingControls|undefined} value */
proto.ClientTransactionListRequest.prototype.setPaging = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.ClientTransactionListRequest.prototype.clearPaging = function() {
  this.setPaging(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ClientTransactionListRequest.prototype.hasPaging = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ClientSortControls sorting = 4;
 * @return {!Array<!proto.ClientSortControls>}
 */
proto.ClientTransactionListRequest.prototype.getSortingList = function() {
  return /** @type{!Array<!proto.ClientSortControls>} */ (
    jspb.Message.getRepeatedWrapperField(this, client_list_control_pb.ClientSortControls, 4));
};


/** @param {!Array<!proto.ClientSortControls>} value */
proto.ClientTransactionListRequest.prototype.setSortingList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.ClientSortControls=} opt_value
 * @param {number=} opt_index
 * @return {!proto.ClientSortControls}
 */
proto.ClientTransactionListRequest.prototype.addSorting = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.ClientSortControls, opt_index);
};


proto.ClientTransactionListRequest.prototype.clearSortingList = function() {
  this.setSortingList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ClientTransactionListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.ClientTransactionListResponse.repeatedFields_, null);
};
goog.inherits(proto.ClientTransactionListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ClientTransactionListResponse.displayName = 'proto.ClientTransactionListResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.ClientTransactionListResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ClientTransactionListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ClientTransactionListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ClientTransactionListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClientTransactionListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),
    transaction_pb.Transaction.toObject, includeInstance),
    headId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paging: (f = msg.getPaging()) && client_list_control_pb.ClientPagingResponse.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ClientTransactionListResponse}
 */
proto.ClientTransactionListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ClientTransactionListResponse;
  return proto.ClientTransactionListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ClientTransactionListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ClientTransactionListResponse}
 */
proto.ClientTransactionListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ClientTransactionListResponse.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = new transaction_pb.Transaction;
      reader.readMessage(value,transaction_pb.Transaction.deserializeBinaryFromReader);
      msg.addTransactions(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeadId(value);
      break;
    case 4:
      var value = new client_list_control_pb.ClientPagingResponse;
      reader.readMessage(value,client_list_control_pb.ClientPagingResponse.deserializeBinaryFromReader);
      msg.setPaging(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ClientTransactionListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ClientTransactionListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ClientTransactionListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClientTransactionListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      transaction_pb.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getHeadId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPaging();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      client_list_control_pb.ClientPagingResponse.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.ClientTransactionListResponse.Status = {
  STATUS_UNSET: 0,
  OK: 1,
  INTERNAL_ERROR: 2,
  NOT_READY: 3,
  NO_ROOT: 4,
  NO_RESOURCE: 5,
  INVALID_PAGING: 6,
  INVALID_SORT: 7,
  INVALID_ID: 8
};

/**
 * optional Status status = 1;
 * @return {!proto.ClientTransactionListResponse.Status}
 */
proto.ClientTransactionListResponse.prototype.getStatus = function() {
  return /** @type {!proto.ClientTransactionListResponse.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.ClientTransactionListResponse.Status} value */
proto.ClientTransactionListResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated Transaction transactions = 2;
 * @return {!Array<!proto.Transaction>}
 */
proto.ClientTransactionListResponse.prototype.getTransactionsList = function() {
  return /** @type{!Array<!proto.Transaction>} */ (
    jspb.Message.getRepeatedWrapperField(this, transaction_pb.Transaction, 2));
};


/** @param {!Array<!proto.Transaction>} value */
proto.ClientTransactionListResponse.prototype.setTransactionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Transaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Transaction}
 */
proto.ClientTransactionListResponse.prototype.addTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Transaction, opt_index);
};


proto.ClientTransactionListResponse.prototype.clearTransactionsList = function() {
  this.setTransactionsList([]);
};


/**
 * optional string head_id = 3;
 * @return {string}
 */
proto.ClientTransactionListResponse.prototype.getHeadId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.ClientTransactionListResponse.prototype.setHeadId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ClientPagingResponse paging = 4;
 * @return {?proto.ClientPagingResponse}
 */
proto.ClientTransactionListResponse.prototype.getPaging = function() {
  return /** @type{?proto.ClientPagingResponse} */ (
    jspb.Message.getWrapperField(this, client_list_control_pb.ClientPagingResponse, 4));
};


/** @param {?proto.ClientPagingResponse|undefined} value */
proto.ClientTransactionListResponse.prototype.setPaging = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.ClientTransactionListResponse.prototype.clearPaging = function() {
  this.setPaging(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ClientTransactionListResponse.prototype.hasPaging = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ClientTransactionGetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ClientTransactionGetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ClientTransactionGetRequest.displayName = 'proto.ClientTransactionGetRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ClientTransactionGetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.ClientTransactionGetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ClientTransactionGetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClientTransactionGetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ClientTransactionGetRequest}
 */
proto.ClientTransactionGetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ClientTransactionGetRequest;
  return proto.ClientTransactionGetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ClientTransactionGetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ClientTransactionGetRequest}
 */
proto.ClientTransactionGetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ClientTransactionGetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ClientTransactionGetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ClientTransactionGetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClientTransactionGetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string transaction_id = 1;
 * @return {string}
 */
proto.ClientTransactionGetRequest.prototype.getTransactionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.ClientTransactionGetRequest.prototype.setTransactionId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.ClientTransactionGetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.ClientTransactionGetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.ClientTransactionGetResponse.displayName = 'proto.ClientTransactionGetResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.ClientTransactionGetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.ClientTransactionGetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.ClientTransactionGetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClientTransactionGetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    transaction: (f = msg.getTransaction()) && transaction_pb.Transaction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.ClientTransactionGetResponse}
 */
proto.ClientTransactionGetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.ClientTransactionGetResponse;
  return proto.ClientTransactionGetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.ClientTransactionGetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.ClientTransactionGetResponse}
 */
proto.ClientTransactionGetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.ClientTransactionGetResponse.Status} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = new transaction_pb.Transaction;
      reader.readMessage(value,transaction_pb.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.ClientTransactionGetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.ClientTransactionGetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.ClientTransactionGetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.ClientTransactionGetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      transaction_pb.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.ClientTransactionGetResponse.Status = {
  STATUS_UNSET: 0,
  OK: 1,
  INTERNAL_ERROR: 2,
  NO_RESOURCE: 5,
  INVALID_ID: 8
};

/**
 * optional Status status = 1;
 * @return {!proto.ClientTransactionGetResponse.Status}
 */
proto.ClientTransactionGetResponse.prototype.getStatus = function() {
  return /** @type {!proto.ClientTransactionGetResponse.Status} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.ClientTransactionGetResponse.Status} value */
proto.ClientTransactionGetResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Transaction transaction = 2;
 * @return {?proto.Transaction}
 */
proto.ClientTransactionGetResponse.prototype.getTransaction = function() {
  return /** @type{?proto.Transaction} */ (
    jspb.Message.getWrapperField(this, transaction_pb.Transaction, 2));
};


/** @param {?proto.Transaction|undefined} value */
proto.ClientTransactionGetResponse.prototype.setTransaction = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.ClientTransactionGetResponse.prototype.clearTransaction = function() {
  this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.ClientTransactionGetResponse.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto);
